version : '2'
services:

  # ========== API-GATEWAY ===============
  api-gateway-build:
    build:
      context: ./de.bruenni.sabbat.api-gateway
      dockerfile: Dockerfile
    image: bruenni/sabbat-api-gateway:api-gateway-latest
    #environment:
    #  - JVM_XMX=-Xmx1024m

  api-gateway-dev:
    image: bruenni/sabbat-api-gateway:api-gateway-latest
    hostname: sabbat-apigateway-dev
    container_name: sabbat-apigateway-dev

    environment:
      #THIS IS RIGHT: use the prod/docker profile bit link to dev conatiner in "links"
      - SPRING_PROFILES_ACTIVE=prod
      - JVM_XMX=-Xmx128m
    links:
      - rabbitmq-dev:rabbitmq-host

    ports:
      - "8082:8081"
    expose:
      - "8081"
    network_mode: "bridge"  # default network with bridge adapter docker0

  api-gateway-prod:
    image: bruenni/sabbat-api-gateway:api-gateway-latest
    hostname: sabbat-apigateway-prod
    container_name: sabbat-apigateway-prod

    environment:
      - SPRING_PROFILES_ACTIVE=prod
      - JVM_XMX=-Xmx128m

    links:
      - rabbitmq-prod:rabbitmq-host

    ports:
      - "8081:8081"

    expose:
      - "8081"

    depends_on:
      - rabbitmq-prod

    network_mode: "bridge"  # default network with bridge adapter docker0

  # ========== LOCATION.APP ===============
  location-app-build:
    build:
      context: ./de.bruenni.sabbat.location.app
      dockerfile: Dockerfile
    image: bruenni/sabbat-location-app:latest

  location-app-dev:
    image: bruenni/sabbat-location-app:latest
    hostname: sabbat-location-app-dev
    container_name: sabbat-location-app-prod

    environment:
      #THIS IS RIGHT: use the prod/docker profile bit link to dev conatiner in "links"
      - SPRING_PROFILES_ACTIVE=prod
    links:
      - rabbitmq-dev:rabbitmq-host
      - cassandra-dev-1:cassandra-host-1
      - cassandra-dev-2:cassandra-host-2


    depends_on:
      - cassandra-dev-1
      - rabbitmq-dev

    network_mode: "bridge"  # default network with bridge adapter docker0

  location-app-prod:
        image: bruenni/sabbat-location-app:latest
        hostname: sabbat-location-app-prod
        container_name: sabbat-location-app-prod

        environment:
          #THIS IS RIGHT: use the prod/docker profile bit link to dev conatiner in "links"
          - SPRING_PROFILES_ACTIVE=prod
        links:
          - rabbitmq-dev:rabbitmq-host
          - cassandra-dev-1:cassandra-host-1
          - cassandra-dev-2:cassandra-host-1


        depends_on:
          - cassandra-dev-1
          - rabbitmq-dev

        network_mode: "bridge"  # default network with bridge adapter docker0

  # ========== CASSANDRA ===============

  cassandra-v22-dev-1:
        hostname: cassandra-v22-dev-1
        container_name: cassandra-v22-dev-1
        image: cassandra:2.2.7
        environment:
          - CASSANDRA_CLUSTER_NAME=sabbat-v22-dev
          - CASSANDRA_BROADCAST_ADDRESS=cassandra-v22-dev-1
          - CASSANDRA_SEEDS=cassandra-v22-dev-1
        ports:  #Expose ports. Either specify both ports (HOST:CONTAINER), or just the container port (a random host port will be chosen).
         - "9052:9042"  # to connect via localhost in development

        #Expose ports without publishing them to the host machine - they’ll only be accessible to linked services. Only the internal port can be specified.
        expose:
          - "9042" #plugin: rabbitmq_management
          - "7000"  # gossip
        network_mode: "bridge"  # default network with bridge adapter docker0
        # CQLSH: docker run -it --link cassandra-dev-1:cassandra-node --rm cassandra:3.0.8 cqlsh cassandra-node

  cassandra-v22-dev-2:
        hostname: cassandra-v22-dev-2
        container_name: cassandra-v22-dev-2
        image: cassandra:2.2.7
        environment:
          - CASSANDRA_CLUSTER_NAME=sabbat-v22-dev
          - CASSANDRA_BROADCAST_ADDRESS=cassandra-v22-dev-2
          - CASSANDRA_SEEDS=cassandra-v22-dev-1
        ports:  #Expose ports. Either specify both ports (HOST:CONTAINER), or just the container port (a random host port will be chosen).
         - "9053:9042"  # to connect via localhost in development

        links:
          - cassandra-v22-dev-1:cassandra-v22-dev-1

        #Expose ports without publishing them to the host machine - they’ll only be accessible to linked services. Only the internal port can be specified.
        expose:
          - "9042" #plugin: rabbitmq_management
          - "7000"  # gossip
        network_mode: "bridge"  # default network with bridge adapter docker0
        # CQLSH: docker run -it --link cassandra-dev-1:cassandra-node --rm cassandra:3.0.8 cqlsh cassandra-node

  cassandra-dev-1:
    hostname: cassandra-dev-1
    container_name: cassandra-dev-1
    image: cassandra:3.0.14
    environment:
      - CASSANDRA_CLUSTER_NAME=sabbat-dev
      - CASSANDRA_BROADCAST_ADDRESS=cassandra-dev-1
      - CASSANDRA_SEEDS=cassandra-dev-1
    ports:  #Expose ports. Either specify both ports (HOST:CONTAINER), or just the container port (a random host port will be chosen).
     - "9042:9042"  # to connect via localhost in development

    #Expose ports without publishing them to the host machine - they’ll only be accessible to linked services. Only the internal port can be specified.
    expose:
      - "9042" #plugin: rabbitmq_management
      - "7000"  # gossip
    network_mode: "bridge"  # default network with bridge adapter docker0
    # CQLSH: docker run -it --link cassandra-dev-1:cassandra-node --rm cassandra:3.0.14 cqlsh cassandra-node

  cassandra-dev-2:
    hostname: cassandra-dev-2
    container_name: cassandra-dev-2
    image: cassandra:3.0.14
    environment:
      - CASSANDRA_CLUSTER_NAME=sabbat-dev
      - CASSANDRA_BROADCAST_ADDRESS=cassandra-dev-2
      - CASSANDRA_SEEDS=cassandra-dev-1
    links:
      - cassandra-dev-1
    #depends_on:
      #- cassandra-dev-1

    #Expose ports without publishing them to the host machine - they’ll only be accessible to linked services. Only the internal port can be specified.
    expose:
      - "9042" #plugin: rabbitmq_management
      - "7000"  # gossip
    network_mode: "bridge"  # default network with bridge adapter docker0

#  rabbitmq-build:
#    build:
#      context: ./docker/rabbitmq
#      dockerfile: Dockerfile
#    image: bruenni/rabbitmq-initialization:3.6.4

  rabbitmq-dev:
    # NOTE
    # No need for rabbitmqctl from different container or management stuff
    # -> this image has an enabled management console; just go in the runninig container and change password for guest and call:
    # 1. docker exec -it rabbitmq-dev /bin/bash
    # 2. http://localhost:15672/ -> login with guest:newpassword
    hostname: rabbitmq-dev
    container_name: rabbitmq-dev
    image: rabbitmq:3.6.4-management

    #Expose ports without publishing them to the host machine - they’ll only be accessible to linked services. Only the internal port can be specified.
    expose:
      - "15672" #plugin: rabbitmq_management
    ports:
    - "5672:5672"
    - "15672:15672"
    volumes:
     - /opt/rabbitmq-sabbat:/var/lib/rabbitmq
    network_mode: "bridge"  # default network with bridge adapter docker

  rabbitmq-prod:
    hostname: rabbitmq-prod
    container_name: rabbitmq-prod
    image: rabbitmq:3.6.4
    #ports:  #Expose ports. Either specify both ports (HOST:CONTAINER), or just the container port (a random host port will be chosen).
     #- "5672:5672"

    #Expose ports without publishing them to the host machine - they’ll only be accessible to linked services. Only the internal port can be specified.
    expose:
      - "15672" #plugin: rabbitmq_management
    ports:
    - "4369:4369"
    - "5672:5672"
    - "15672:15672"
    volumes:
     - /opt/rabbitmq-sabbat:/var/lib/rabbitmq
    network_mode: "bridge"  # default network with bridge adapter docker0


  rabbitmq-ctl:
    #docker run -it --name rabbitmq-ctl --link some-rabbit:my-rabbit -e RABBITMQ_ERLANG_COOKIE='secret cookie here' rabbitmq:3 bash
    #docker run -it --name rabbitmq-ctl --add-host rabbit:138.68.75.155 -e RABBITMQ_ERLANG_COOKIE='HXZQALONJINGVZQBVBMZ' rabbitmq:3.6.4 bash
    #docker run -it --name rabbitmq-ctl ¹
    # then run in bash: rabbitmqctl -n rabbit@rabbitmq-dev list_queues

    #root@f2a2d3d27c75:/# rabbitmqctl -n rabbit@rabbitmq-dev list_users
    container_name: rabbitmq-ctl
    image: rabbitmq:3.6.4
    entrypoint: bash
    network_mode: "bridge"  # default network with bridge adapter docker0

  postgresql-dev:
    container_name: postgresql-dev
    image: postgres:9.6.2
    ports:
      - "5432:5432"
    environment:
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=postgres#2017
    volumes:
      - /opt/postgresql-sabbat:/var/lib/postgresql/data

  postgresql-94-dev:
    container_name: postgresql-94-dev
    image: postgres:9.4.11
    ports:
      - "5433:5432"
    environment:
    - POSTGRES_USER=postgres
    - POSTGRES_PASSWORD=postgres#2017
    volumes:
      - /opt/postgresql-94-sabbat:/var/lib/postgresql/data
