version: '2'
services:

  # ========== API-GATEWAY ===============
  api-gateway-build:
    build:
      context: ./de.bruenni.sabbat.api-gateway
      dockerfile: Dockerfile
    image: bruenni/sabbat-api-gateway:latest

  api-gateway-dev:
    image: bruenni/sabbat-api-gateway:latest
    hostname: sabbat-apigateway-dev
    container_name: sabbat-apigateway-dev

    environment:
      - SPRING_PROFILES_ACTIVE=dev

    ports:
      - "8081:8081"
    expose:
      - "8081"
    network_mode: "bridge"  # default network with bridge adapter docker0

  api-gateway-prod:
    image: bruenni/sabbat-api-gateway:latest
    hostname: sabbat-apigateway-prod
    container_name: sabbat-apigateway-prod

    environment:
      - SPRING_PROFILES_ACTIVE=prod

    links:
      - rabbitmq-prod:rabbitmq-host

    ports:
      - "8081:8081"

    expose:
      - "8081"

    depends_on:
      - rabbitmq-prod

    network_mode: "bridge"  # default network with bridge adapter docker0

  # ========== LOCATION.APP ===============
  location-app-build:
    build:
      context: ./de.bruenni.sabbat.location.app
      dockerfile: Dockerfile
    image: bruenni/sabbat-location-app:latest

  location-app-dev:
    image: bruenni/sabbat-location-app:latest
    hostname: sabbat-location-app-dev
    container_name: sabbat-location-app

    environment:
      - SPRING_PROFILES_ACTIVE=dev

    links:
      - cassandra-v22-dev-1:cassandra-dev-1
      - cassandra-v22-dev-2:cassandra-dev-2
      - rabbitmq-dev:rabbitmq-dev

    depends_on:
      - cassandra-v22-dev-1
      - rabbitmq-dev

    network_mode: "bridge"  # default network with bridge adapter docker0

  # ========== CASSANDRA ===============
  cassandra-dev-1:
    hostname: cassandra-dev-1
    container_name: cassandra-dev-1
    image: cassandra:3.0.8
    environment:
      - CASSANDRA_CLUSTER_NAME=sabbat-dev
      - CASSANDRA_BROADCAST_ADDRESS=cassandra-dev-1
      - CASSANDRA_SEEDS=cassandra-dev-1
    ports:  #Expose ports. Either specify both ports (HOST:CONTAINER), or just the container port (a random host port will be chosen).
     - "9042:9042"  # to connect via localhost in development

    #Expose ports without publishing them to the host machine - they’ll only be accessible to linked services. Only the internal port can be specified.
    expose:
      - "9042" #plugin: rabbitmq_management
      - "7000"  # gossip
    network_mode: "bridge"  # default network with bridge adapter docker0
    # CQLSH: docker run -it --link cassandra-dev-1:cassandra-node --rm cassandra:3.0.8 cqlsh cassandra-node

  cassandra-dev-2:
    hostname: cassandra-dev-2
    container_name: cassandra-dev-2
    image: cassandra:3.0.8
    environment:
      - CASSANDRA_CLUSTER_NAME=sabbat-dev
      - CASSANDRA_BROADCAST_ADDRESS=cassandra-dev-2
      - CASSANDRA_SEEDS=cassandra-dev-1
    links:
      - cassandra-dev-1
    #depends_on:
      #- cassandra-dev-1

    #Expose ports without publishing them to the host machine - they’ll only be accessible to linked services. Only the internal port can be specified.
    expose:
      - "9042" #plugin: rabbitmq_management
      - "7000"  # gossip
    network_mode: "bridge"  # default network with bridge adapter docker0
    # CQLSH: docker run -it --link cassandra-dev-2:cassandra-node --rm cassandra:3.0.8 cqlsh cassandra-node

  cassandra-v22-dev-1:
        hostname: cassandra-v22-dev-1
        container_name: cassandra-v22-dev-1
        image: cassandra:2.2.7
        environment:
          - CASSANDRA_CLUSTER_NAME=sabbat-v22-dev
          - CASSANDRA_BROADCAST_ADDRESS=cassandra-v22-dev-1
          - CASSANDRA_SEEDS=cassandra-v22-dev-1
        ports:  #Expose ports. Either specify both ports (HOST:CONTAINER), or just the container port (a random host port will be chosen).
         - "9052:9042"  # to connect via localhost in development

        #Expose ports without publishing them to the host machine - they’ll only be accessible to linked services. Only the internal port can be specified.
        expose:
          - "9042" #plugin: rabbitmq_management
          - "7000"  # gossip
        network_mode: "bridge"  # default network with bridge adapter docker0
        # CQLSH: docker run -it --link cassandra-dev-1:cassandra-node --rm cassandra:3.0.8 cqlsh cassandra-node

  cassandra-v22-dev-2:
        hostname: cassandra-v22-dev-2
        container_name: cassandra-v22-dev-2
        image: cassandra:2.2.7
        environment:
          - CASSANDRA_CLUSTER_NAME=sabbat-v22-dev
          - CASSANDRA_BROADCAST_ADDRESS=cassandra-v22-dev-2
          - CASSANDRA_SEEDS=cassandra-v22-dev-1
        ports:  #Expose ports. Either specify both ports (HOST:CONTAINER), or just the container port (a random host port will be chosen).
         - "9053:9042"  # to connect via localhost in development

        links:
          - cassandra-v22-dev-1:cassandra-v22-dev-1

        #Expose ports without publishing them to the host machine - they’ll only be accessible to linked services. Only the internal port can be specified.
        expose:
          - "9042" #plugin: rabbitmq_management
          - "7000"  # gossip
        network_mode: "bridge"  # default network with bridge adapter docker0
        # CQLSH: docker run -it --link cassandra-dev-1:cassandra-node --rm cassandra:3.0.8 cqlsh cassandra-node

  rabbitmq-dev:
    hostname: rabbitmq-dev
    container_name: rabbitmq-dev
    image: rabbitmq:3.6.4
    #ports:  #Expose ports. Either specify both ports (HOST:CONTAINER), or just the container port (a random host port will be chosen).
     #- "5672:5672"

    #Expose ports without publishing them to the host machine - they’ll only be accessible to linked services. Only the internal port can be specified.
    expose:
      - "15672" #plugin: rabbitmq_management
    ports:
    - "5672:5672"
    - "15672:15672"
    volumes:
     - /opt/tmp/rabbitmq-sabbat:/var/lib/rabbitmq
    network_mode: "bridge"  # default network with bridge adapter docker0

  rabbitmq-prod:
    hostname: rabbitmq-prod
    container_name: rabbitmq-prod
    image: rabbitmq:3.6.4
    #ports:  #Expose ports. Either specify both ports (HOST:CONTAINER), or just the container port (a random host port will be chosen).
     #- "5672:5672"

    #Expose ports without publishing them to the host machine - they’ll only be accessible to linked services. Only the internal port can be specified.
    expose:
      - "15672" #plugin: rabbitmq_management
    ports:
    - "5672:5672"
    - "15672:15672"
    volumes:
     - /opt/rabbitmq-sabbat:/var/lib/rabbitmq
    network_mode: "bridge"  # default network with bridge adapter docker0


  rabbitmq-ctl:
    #docker run -it --name rabbitmq-ctl --link some-rabbit:my-rabbit -e RABBITMQ_ERLANG_COOKIE='secret cookie here' rabbitmq:3 bash
    #docker run -it --name rabbitmq-ctl --link rabbitmq-dev:rabbit -e RABBITMQ_ERLANG_COOKIE='DDXFNKDEXRBEGNIOHNPO' rabbitmq:3.6.4 bash
    # then run in bash: rabbitmqctl -n rabbit@rabbitmq-dev list_queues

    #root@f2a2d3d27c75:/# rabbitmqctl -n rabbit@rabbitmq-dev list_users
    container_name: rabbitmq-ctl
    image: rabbitmq:3.6.4
    entrypoint: bash
    network_mode: "bridge"  # default network with bridge adapter docker0
